{"version":3,"file":"static/js/224.dfb3f9e5.chunk.js","mappings":"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","sources":["history.js","auth/FetchInterceptor.js","services/JwtAuthService.js","views/auth-views/authentication/register-1/index.js","views/auth-views/components/RegisterForm.js"],"sourcesContent":["import * as history from 'history';\r\n\r\nexport default history.createBrowserHistory();","import axios from 'axios'\r\nimport { API_BASE_URL } from 'configs/AppConfig'\r\nimport history from '../history'\r\nimport { AUTH_TOKEN } from 'redux/constants/Auth'\r\nimport { notification } from 'antd';\r\n\r\nconst service = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000\r\n})\r\n\r\n// Config\r\nconst ENTRY_ROUTE = '/auth/login'\r\nconst TOKEN_PAYLOAD_KEY = 'authorization'\r\nconst PUBLIC_REQUEST_KEY = 'public-request'\r\n\r\n// API Request interceptor\r\nservice.interceptors.request.use(config => {\r\n\tconst jwtToken = localStorage.getItem(AUTH_TOKEN)\r\n\t\r\n  if (jwtToken) {\r\n    config.headers[TOKEN_PAYLOAD_KEY] = jwtToken\r\n  }\r\n\r\n  if (!jwtToken && !config.headers[PUBLIC_REQUEST_KEY]) {\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n  }\r\n\r\n  return config\r\n}, error => {\r\n\t// Do something with request error here\r\n\tnotification.error({\r\n\t\tmessage: 'Error'\r\n\t})\r\n  Promise.reject(error)\r\n})\r\n\r\n// API respone interceptor\r\nservice.interceptors.response.use( (response) => {\r\n\treturn response.data\r\n}, (error) => {\r\n\r\n\tlet notificationParam = {\r\n\t\tmessage: ''\r\n\t}\r\n\t\r\n\t// Remove token and redirect \r\n\tif (error.response.status === 400 || error.response.status === 403) {\r\n\t\tnotificationParam.message = 'Authentication Fail'\r\n\t\tnotificationParam.description = 'Please login again'\r\n\t\tlocalStorage.removeItem(AUTH_TOKEN)\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\tif (error.response.status === 404) {\r\n\t\tnotificationParam.message = 'Not Found'\r\n\t}\r\n\r\n\tif (error.response.status === 500) {\r\n\t\tnotificationParam.message = 'Internal Server Error'\r\n\t}\r\n\t\r\n\tif (error.response.status === 508) {\r\n\t\tnotificationParam.message = 'Time Out'\r\n\t}\r\n\r\n\tnotification.error(notificationParam)\r\n\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nexport default service","import fetch from 'auth/FetchInterceptor'\r\n\r\nconst JwtAuthService = {}\r\n\r\nJwtAuthService.login = function (data) {\r\n\treturn fetch({\r\n\t\turl: '/posts',\r\n\t\tmethod: 'post',\r\n\t\theaders: {\r\n      'public-request': 'true'\r\n    },\r\n\t\tdata: data\r\n\t})\r\n}\r\n\r\nJwtAuthService.signUp = function (data) {\r\n\treturn fetch({\r\n\t\turl: '/auth/signup',\r\n\t\tmethod: 'post',\r\n\t\theaders: {\r\n      'public-request': 'true'\r\n    },\r\n\t\tdata: data\r\n\t})\r\n}\r\n\r\nexport default JwtAuthService","import React from 'react'\r\nimport RegisterForm from '../../components/RegisterForm'\r\nimport { Card, Row, Col } from \"antd\";\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst backgroundStyle = {\r\n\tbackgroundImage: 'url(/img/others/img-17.jpg)',\r\n\tbackgroundRepeat: 'no-repeat',\r\n\tbackgroundSize: 'cover'\r\n}\r\n\r\nconst RegisterOne = props => {\r\n\tconst theme = useSelector(state => state.theme.currentTheme)\r\n\treturn (\r\n\t\t<div className=\"h-100\" style={backgroundStyle}>\r\n\t\t\t<div className=\"container d-flex flex-column justify-content-center h-100\">\r\n\t\t\t\t<Row justify=\"center\">\r\n\t\t\t\t\t<Col xs={20} sm={20} md={20} lg={7}>\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<div className=\"my-2\">\r\n\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={`/img/${theme === 'light' ? 'logo.png': 'logo-white.png'}`} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-muted\">Create a new account:</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Row justify=\"center\">\r\n\t\t\t\t\t\t\t\t\t<Col xs={24} sm={24} md={20} lg={20}>\r\n\t\t\t\t\t\t\t\t\t\t<RegisterForm {...props}/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RegisterOne\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { LockOutlined, MailOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Alert } from \"antd\";\r\nimport { showAuthMessage, showLoading, hideAuthMessage, authenticated } from 'redux/actions/Auth';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\"\r\nimport JwtAuthService from 'services/JwtAuthService'\r\n\r\nconst rules = {\r\n\temail: [\r\n\t\t{ \r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please input your email address'\r\n\t\t},\r\n\t\t{ \r\n\t\t\ttype: 'email',\r\n\t\t\tmessage: 'Please enter a validate email!'\r\n\t\t}\r\n\t],\r\n\tpassword: [\r\n\t\t{ \r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please input your password'\r\n\t\t}\r\n\t],\r\n\tconfirm: [\r\n\t\t{ \r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please confirm your password!'\r\n\t\t},\r\n\t\t({ getFieldValue }) => ({\r\n\t\t\tvalidator(rule, value) {\r\n\t\t\t\tif (!value || getFieldValue('password') === value) {\r\n\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t}\r\n\t\t\t\treturn Promise.reject('Passwords do not match!');\r\n\t\t\t},\r\n\t\t})\r\n\t]\r\n}\r\n\r\nexport const RegisterForm = (props) => {\r\n\r\n\tconst { showLoading, token, loading, redirect, message, showMessage, hideAuthMessage, authenticated, allowRedirect } = props\r\n\tconst [form] = Form.useForm();\r\n\tlet history = useHistory();\r\n\r\n\tconst onSignUp = () => {\r\n    \tform.validateFields().then(values => {\r\n\t\t\tshowLoading()\r\n\t\t\tconst fakeToken = 'fakeToken'\r\n\t\t\tJwtAuthService.signUp(values).then(resp => {\r\n\t\t\t\tauthenticated(fakeToken)\r\n\t\t\t}).then(e => {\r\n\t\t\t\tshowAuthMessage(e)\r\n\t\t\t})\r\n\t\t}).catch(info => {\r\n\t\t\tconsole.log('Validate Failed:', info);\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n    \tif (token !== null && allowRedirect) {\r\n\t\t\thistory.push(redirect)\r\n\t\t}\r\n\t\tif(showMessage) {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\thideAuthMessage();\r\n\t\t\t}, 3000);\r\n\t\t}\r\n  });\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<motion.div \r\n\t\t\t\tinitial={{ opacity: 0, marginBottom: 0 }} \r\n\t\t\t\tanimate={{ \r\n\t\t\t\t\topacity: showMessage ? 1 : 0,\r\n\t\t\t\t\tmarginBottom: showMessage ? 20 : 0 \r\n\t\t\t\t}}> \r\n\t\t\t\t<Alert type=\"error\" showIcon message={message}></Alert>\r\n\t\t\t</motion.div>\r\n\t\t\t<Form form={form} layout=\"vertical\" name=\"register-form\" onFinish={onSignUp}>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"email\" \r\n\t\t\t\t\tlabel=\"Email\" \r\n\t\t\t\t\trules={rules.email}\r\n\t\t\t\t\thasFeedback\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input prefix={<MailOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"password\" \r\n\t\t\t\t\tlabel=\"Password\" \r\n\t\t\t\t\trules={rules.password}\r\n\t\t\t\t\thasFeedback\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input.Password prefix={<LockOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"confirm\" \r\n\t\t\t\t\tlabel=\"ConfirmPassword\" \r\n\t\t\t\t\trules={rules.confirm}\r\n\t\t\t\t\thasFeedback\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input.Password prefix={<LockOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\r\n\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({auth}) => {\r\n\tconst { loading, message, showMessage, token, redirect } = auth;\r\n  return { loading, message, showMessage, token, redirect }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tshowAuthMessage,\r\n\thideAuthMessage,\r\n\tshowLoading,\r\n\tauthenticated\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm)\r\n"],"names":["history","service","axios","baseURL","API_BASE_URL","timeout","ENTRY_ROUTE","interceptors","request","use","config","jwtToken","localStorage","getItem","AUTH_TOKEN","headers","push","window","location","reload","error","notification","message","Promise","reject","response","data","notificationParam","status","description","removeItem","JwtAuthService","fetch","url","method","backgroundStyle","backgroundImage","backgroundRepeat","backgroundSize","props","theme","useSelector","state","currentTheme","_jsx","className","style","children","Row","justify","Col","xs","sm","md","lg","Card","_jsxs","src","concat","alt","RegisterForm","rules","email","required","type","password","confirm","_ref","getFieldValue","validator","rule","value","resolve","mapDispatchToProps","showAuthMessage","hideAuthMessage","showLoading","authenticated","connect","_ref2","auth","loading","showMessage","token","redirect","allowRedirect","form","Form","useForm","useHistory","useEffect","setTimeout","_Fragment","motion","div","initial","opacity","marginBottom","animate","Alert","showIcon","layout","name","onFinish","onSignUp","validateFields","then","values","signUp","resp","e","catch","info","console","log","Item","label","hasFeedback","Input","prefix","MailOutlined","Password","LockOutlined","Button","htmlType","block"],"sourceRoot":""}